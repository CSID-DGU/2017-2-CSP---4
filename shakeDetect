# Shake Detect Java Code
package hun.shakeapp2;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.nfc.Tag;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class SHakeActivity extends AppCompatActivity implements SensorEventListener{
    SensorManager mSensorManager;
    Sensor mAccelerometer;
    int mShakeCount = 0;

    private long mShakeTime;
    // 한번 shake가 되고나서 0.5초가 지난 경우는 무시
    private static final int SHAKE_SKIP_TIME = 500;

    // 민감도 조정
    private static final float SHAKE_THRESHOLD_GRAVITY = 2.7f;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_shake);

      mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
       mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
    }

    //listener의 등록과 해제
    @Override
    protected void onResume(){
        super.onResume();
        mSensorManager.registerListener(this,mAccelerometer,SensorManager.SENSOR_DELAY_NORMAL);
    }
    @Override
    protected  void onPause(){
        super.onPause();
        mSensorManager.unregisterListener(this);
    }
    // SensroEventListner implements시에 구현하는 메소드
    @Override
    public void onSensorChanged(SensorEvent event) {
        //sensor값구하기
        // event의 values라는 배열값들 중 0,1,2가 각각 x,y,z에 해당
        if(event.sensor.getType()==Sensor.TYPE_ACCELEROMETER){
            float axisX= event.values[0];
            float axisY = event.values[1];
            float axisZ = event.values[2];

            /* x,y,z값을 이용하여 중력 가속도 값을 구함
            그 값이 만약에 지구의 중력보다 더 큰 값이면, 힘을 아래로 주어 중력을 더해준것것
            */
            float gravityX = axisX / SensorManager.GRAVITY_EARTH;
            float gravityY = axisY / SensorManager.GRAVITY_EARTH;
            float gravityZ = axisZ / SensorManager.GRAVITY_EARTH;

            Float f = gravityX * gravityX + gravityY * gravityY + gravityZ*gravityZ;
            double squaredD = Math.sqrt(f.doubleValue());
            float gForce = (float)squaredD;
            if(gForce>SHAKE_THRESHOLD_GRAVITY){
                long currentTime = System.currentTimeMillis();
                if(mShakeTime+SHAKE_SKIP_TIME>currentTime){
                    return;
                }
                mShakeTime = currentTime;
                mShakeCount++;
                Log.v("tag","onSensorChanged: Shake 발생"+mShakeCount);

            }
        }
    }
    @Override
    public void onAccuracyChanged(Sensor sensor, int i) {

    }
}
